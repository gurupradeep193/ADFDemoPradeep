{
	"name": "dataflow_Employee_WindowMaxsickHours",
	"properties": {
		"folder": {
			"name": "Practice"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSVDataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataFlowSinkLocation",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "window1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BusinessEntityID as integer,",
				"          NationalIDNumber as integer,",
				"          LoginID as integer,",
				"          OrganizationNode as string,",
				"          OrganizationLevel as short,",
				"          JobTitle as string,",
				"          BirthDate as timestamp,",
				"          MaritalStatus as string,",
				"          Gender as string,",
				"          HireDate as timestamp,",
				"          SalariedFlag as boolean,",
				"          VacationHours as short,",
				"          SickLeaveHours as short,",
				"          CurrentFlag as boolean,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 window(over(JobTitle),",
				"     Max_sichHours = max(SickLeaveHours),",
				"          Avg_SickHours = round(avg(SickLeaveHours))) ~> window1",
				"window1 filter(greater(Max_sichHours, Avg_SickHours)) ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmployeesMaxsickhours.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BusinessEntityID,",
				"          NationalIDNumber,",
				"          LoginID,",
				"          OrganizationNode,",
				"          OrganizationLevel,",
				"          JobTitle,",
				"          Gender,",
				"          SickLeaveHours,",
				"          Max_sichHours,",
				"          Avg_SickHours",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}